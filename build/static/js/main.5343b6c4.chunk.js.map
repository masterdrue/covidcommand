{"version":3,"sources":["serviceWorker.js","components/LoadingComponent.js","shared/baseUrl.js","components/DirectoryComponent.js","components/CampsiteInfoComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/campsites.js","redux/comments.js","redux/partners.js","redux/promotions.js","redux/forms.js","App.js","redux/configureStore.js","index.js"],"names":["Boolean","window","location","hostname","match","Loading","className","baseUrl","RenderDirectoryItem","campsite","to","id","width","src","image","alt","name","Directory","props","directory","campsites","map","key","isLoading","errMess","active","required","val","length","minlength","len","maxLength","CommentForm","state","isModalOpen","touched","rating","author","text","toggleModal","bind","handleSubmit","this","setState","values","postComment","campsiteId","alert","JSON","stringify","Fragment","onClick","outline","isOpen","toggle","onSubmit","htmlFor","select","model","validators","show","component","messages","placeholder","textarea","rows","React","Component","RenderCampsite","in","transformProps","exitTransform","top","description","RenderComments","comments","comment","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CampsiteInfo","Header","isNavOpen","isDashboardOpen","toggleNav","handleLogin","toggleDashboard","event","username","value","password","remember","checked","preventDefault","dark","sticky","expand","href","navbar","color","url","height","frameBorder","type","innerRef","input","check","Footer","target","RenderCard","item","button","Home","campsitesLoading","campsitesErrMess","promotion","promotionLoading","promotionErrMess","partner","partnerLoading","partnerErrMess","isNumber","isNaN","validEmail","test","Contact","firstName","lastName","phoneNum","email","agree","contactType","feedback","postFeedback","resetFeedbackForm","md","size","offset","checkbox","RenderPartner","object","body","heading","PartnerList","partners","tag","list","About","title","campsitesFailed","payload","addCampsites","commentsFailed","addComments","promotionsLoading","promotionsFailed","addPromotions","promotions","partnersLoading","partnersFailed","addPartners","mapDispatchToProps","dispatch","newComment","toISOString","fetch","method","headers","then","response","ok","error","Error","status","statusText","json","catch","console","log","message","fetchCampsites","actions","reset","fetchComments","fetchPromotions","fetchPartners","Main","classNames","timeout","path","filter","featured","exact","render","params","commentsErrMess","withRouter","connect","Campsites","action","Comments","concat","Partners","Promotions","InitialFeedback","store","createStore","combineReducers","createForms","feedbackForm","applyMiddleware","thunk","logger","App","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5343b6c4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nexport const Loading = () => {\n    return (\n        <div className=\"col\">\n            <i className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\" />\n            <p>Loading...</p>\n        </div>\n    );\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n \nfunction RenderDirectoryItem({campsite}) {\n    return (\n        <Card>\n            <Link to={`/directory/${campsite.id}`}>\n                <CardImg width=\"100%\" src={baseUrl + campsite.image} alt={campsite.name} />\n                <CardImgOverlay>\n                    <CardTitle>{campsite.name}</CardTitle>\n                </CardImgOverlay>\n            </Link>\n        </Card>\n    );\n}\n\nfunction Directory(props) {\n   \n    const directory = props.campsites.campsites.map(campsite => {\n        return (\n            <div key={campsite.id} className=\"col-md-5 m-1\">\n                <RenderDirectoryItem campsite={campsite} />   \n            </div>\n        );\n    });\n    if (props.campsites.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    if (props.campsites.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h4>{props.campsites.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Directory</BreadcrumbItem>\n                    </Breadcrumb>\n                    <h2>Directory</h2>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row\">\n                {directory}\n            </div>\n        </div>\n    );\n}\n\nexport default Directory;","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, \n    Button, Modal, ModalHeader, ModalBody, Label } from 'reactstrap';\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nconst required = val => val && val.length;\nconst minlength = len => val => val && (val.length >= len);\nconst maxLength = len => val => !val || (val.length <= len);\n\nclass CommentForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isModalOpen: false,\n            touched: {\n                rating: false,\n                author: false,\n                text: false\n            }\n        };\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({ isModalOpen: !this.state.isModalOpen });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.postComment(this.props.campsiteId, values.rating, values.author, values.text)\n        alert(\"You've submitted the following: \" + JSON.stringify(values));\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Button onClick={this.toggleModal} className=\"fa fa-pencil\" outline> Submit Comment</Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal} className=\"bg-success text-white\"> Submit Comment</ModalHeader>    \n                    <ModalBody>\n                        <LocalForm onSubmit={this.handleSubmit}>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"rating\">Rating</Label>\n                                <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        required\n                                    }}>\n                                        <option>Select Rating</option>\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                </Control.select>\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".rating\"\n                                    show=\"touched\"\n                                    component=\"div\"\n                                    messages={{\n                                        required: 'Come on, select a Rating would ya!',\n                                    }}\n                                /> \n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"author\">Your Name</Label>\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                    className=\"form-control\"\n                                    placeholder=\"Your Name\"\n                                    validators={{\n                                        required,\n                                        minlength: minlength(2),\n                                        maxLength: maxLength(15)\n                                    }}  \n                                />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".author\"\n                                    show=\"touched\"\n                                    component=\"div\"\n                                    messages={{\n                                        required: 'Required',\n                                        minlength: 'Are you lying? Enter more than 2 characters!',\n                                        maxLength: 'No more than 15 characters LOL'\n                                    }}\n                                /> \n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"text\">Comment</Label>\n                                <Control.textarea model=\".text\" id=\"text\" name=\"text\"\n                                    className=\"form-control\"\n                                    rows=\"8\"\n                                    placeholder=\"Tell me how you really feel..\"\n                                    validators={{\n                                        required,\n                                        minlength: minlength(2),\n                                        maxLength: maxLength(25)\n                                    }}\n                                />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".comment\"\n                                    show=\"touched\"\n                                    component=\"div\"\n                                    messages={{\n                                        required: 'Required',\n                                        minlength: 'Stop being lazy and enter something meaningful',\n                                        maxLength: 'LMDR, I stopped caring after 25 characters'\n                                    }}\n                                /> \n                            </div>\n                            <Button className=\"btn-success\">Submit Comment</Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n} \n\nfunction RenderCampsite({campsite}) {\n    return (\n        <div className=\"col-md-5 m-1\">\n            <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>    \n                <Card>\n                    <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />\n                    <CardBody>\n                        <CardTitle>{campsite.name}</CardTitle>\n                        <CardText>{campsite.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>    \n        </div>\n    )\n}\n\nfunction RenderComments({ comments, postComment, campsiteId }) {\n    if (comments) {\n        return (\n            <div className=\"col-md-5 m-1\">\n                <h4>Comments</h4>\n                <Stagger in>\n                    {comments.map(comment => {\n                        return (\n                            <Fade in key={comment.id}>\n                                <div>\n                                    <p>{comment.text}<br />\n                                    -- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\n                                </div>\n                            </Fade>\n                        );\n                    })}\n                </Stagger>    \n                <CommentForm campsiteId={campsiteId} postComment={postComment}  />\n            </div>\n        );\n    }\n    return <div />\n}\n\nfunction CampsiteInfo(props) {\n    if (props.isLoading) {\n        return ( \n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    if (props.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    if (props.campsite) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to=\"/directory\">Directory</Link>\n                            </BreadcrumbItem>\n                            <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>{props.campsite.name}</h2>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <RenderCampsite campsite={props.campsite} />\n                    <RenderComments \n                    comments ={props.comments} \n                    postComment={props.postComment}\n                    campsiteId={props.campsite.id}\n                    />\n                </div>\n            </div>\n        );\n    }\n    return <div />;\n}\n\nexport default CampsiteInfo;","import React, { Component } from 'react';\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem,\n    Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\nimport Iframe from 'react-iframe';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false,\n            isDashboardOpen: false\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.toggleDashboard = this.toggleDashboard.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n    toggleDashboard() {\n        this.setState({\n            isDashboardOpen: !this.state.isDashboardOpen\n        });\n    }\n\n    handleLogin(event) {\n        alert(`Username: ${this.username.value} Password: ${this.password.value} \n        Remember: ${this.remember.checked}`);\n        this.toggleModal();\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar dark sticky=\"top\" expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarBrand className=\"mr-auto\" href=\"/home\">\n                            {/*<img src=\"assets/images/logo-trans-30.png\" height=\"30\" width=\"30\" alt=\"logo\" />*/}\n                        </NavbarBrand>\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/\">\n                                        <i className=\"fa fa-home fa-lg\" /> Home\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/directory\">\n                                        <i className=\"fa fa-list fa-lg\" /> Directory\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                        <i className=\"fa fa-info fa-lg\" /> About\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\n                                        <i className=\"fa fa-address-card fa-lg\" /> Contact\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <span className=\"navbar-text ml-auto\">\n                                <Button color=\"success\" onClick={this.toggleModal}>\n                                    <i className=\"fa fa-sign-in fa-lg\" /> Login\n                                </Button>\n                            </span>\n                            <span className=\"navbar-text ml-2\">\n                                <Button color=\"danger\" onClick={this.toggleDashboard}>\n                                    <i className=\"fa fa-crosshairs fa-lg\" /> Dashboard\n                                </Button>\n                            </span>\n                        </Collapse>    \n                    </div>\n                </Navbar>\n\n                <div className=\"container-fluid bg-dark\">\n                <div className=\"row\">\n                    <div id=\"dashboard\" className=\"col\">\n                    <Collapse isOpen={this.state.isDashboardOpen} toggle={this.toggleDashboard}>\n                        <Iframe url=\"https://www.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6\"\n                            width=\"100%\"\n                            className=\"hopkinsDashboard d-none d-lg-block\"\n                            height=\"700px\"\n                            frameBorder=\"0\"\n                        />\n                        <Iframe url=\"https://www.arcgis.com/apps/opsdashboard/index.html#/85320e2ea5424dfaaa75ae62e5c06e61\"\n                            width=\"100%\"\n                            className=\"hopkinsDashboard d-block d-sm-block d-lg-none\"\n                            height=\"700px\"\n                            frameBorder=\"0\"\n                        />\n                        </Collapse>   \n                    </div>\n                </div>\n            </div>\n\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                   <ModalHeader toggle={this.toggleModal}>Login</ModalHeader> \n                   <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\" innerRef={input => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\" innerRef={input => this.password = input}  />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\" innerRef={input => this.remember = input} />  Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                   </ModalBody>\n                </Modal>\n\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Button, ButtonGroup } from 'reactstrap';\n\n\nfunction Footer(props) {\n    return (\n        <footer className=\"site-footer\">\n            <div className=\"container\">\n                <div className=\"row\">\n                <div className=\"col col-sm\">\n                        <h5>COVID CONNECTED</h5>\n                        <a className=\"btn btn-social-icon btn-instagram\" href=\"http://instagram.com/\"><i className=\"fa fa-instagram\" /></a>{' '}\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/\"><i className=\"fa fa-facebook\" /></a>{' '}\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\" /></a>{' '}\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\" /></a> \n                    </div>\n                    <div className=\"col-6 col-sm text-sm-center\">\n                        <h5>NAVIGATE</h5>\n                        <ButtonGroup>\n                            <Button href=\"/home\">Home</Button>\n                            <Button href=\"/directory\">Directory</Button>\n                            <Button href=\"/aboutus\">About</Button>\n                            <Button href=\"/contactus\">Contact</Button>\n                        </ButtonGroup>\n                    </div>\n                    \n                    <div className=\"col text-sm-right\">\n                        <h5>GLOBAL AWARENESS</h5>\n                        <Button href=\"https://druescloud.com\" target=\"_blank\"><i className=\"fa fa-globe\"></i> DruesCloud.com</Button>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, Button, CardFooter } from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\n\n\nfunction RenderCard({item, isLoading, errMess}) {\n    if (isLoading) {\n        return <Loading />;\n    }\n    if (errMess) {\n    return <h4>{errMess}</h4>\n    }\n    return (\n            <FadeTransform\n                in \n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(50%)'\n                }}>\n            <Card>\n                <CardImg src={baseUrl + item.image} alt={item.name} />\n                <CardBody>\n                    <CardTitle>{item.name}</CardTitle>\n                    <CardText>{item.description}</CardText>\n                    <Button target=\"_blank\" href={item.url}>{item.button}</Button>\n                </CardBody>\n                <CardFooter className=\"text-muted\"> min ago</CardFooter>\n            </Card>\n        </FadeTransform>\n    );\n}\n\nfunction Home(props) {\n    return (\n        \n            \n            <div className=\"container\">\n                <div className=\"row m-5\">\n                    <div className=\"col-md\">\n                        <RenderCard \n                            item={props.campsite} \n                            isLoading={props.campsitesLoading}\n                            errMess={props.campsitesErrMess}\n                        />\n                    </div>\n                    <div className=\"col-md\">\n                        <RenderCard \n                            item={props.promotion} \n                            isLoading={props.promotionLoading}\n                            errMess={props.promotionErrMess}\n                            />\n                    </div>\n                    <div className=\"col-md\">\n                    <RenderCard \n                            item={props.partner}\n                            isLoading={props.partnerLoading}\n                            errMess={props.partnerErrMess}\n                        />                \n                    </div>\n                </div>\n            </div>\n       \n    );\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors } from 'react-redux-form'; \n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minlength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            agree: false,\n            contactType: 'By Phone',\n            feedback: '',\n            touched: {\n                firstName: false,\n                lastName: false,\n                phoneNum: false,\n                email: false\n            }\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n            this.props.postFeedback(values);\n            this.props.resetFeedbackForm();\n        }\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Contact</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>Contact Us</h2>\n                        <hr />\n                    </div>\n                </div>\n                \n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                        <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minlength: minlength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                        />\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".firstName\"\n                                            show=\"touched\"\n                                            component=\"div\"\n                                            messages={{\n                                                required: 'Required',\n                                                minlength: 'Need 2 characters',\n                                                maxLength: 'No more than 15 characters'\n                                            }}\n                                        />    \n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minlength: minlength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                        />\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".lastName\"\n                                            show=\"touched\"\n                                            component=\"div\"\n                                            messages={{\n                                                required: 'Required',\n                                                minlength: 'Need 2 characters',\n                                                maxLength: 'No more than 15 characters'\n                                            }}\n                                        />\n                                </Col>                        \n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minlength: minlength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                        />\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".phoneNum\"\n                                            show=\"touched\"\n                                            component=\"div\"\n                                            messages={{\n                                                required: 'Required',\n                                                minlength: 'Need 10 characters',\n                                                maxLength: 'No more than 15 characters',\n                                                isNumber: 'Must be a number'\n                                            }}\n                                        />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}\n                                       />\n                                       <Errors\n                                            className=\"text-danger\"\n                                            model=\".email\"\n                                            show=\"touched\"\n                                            component=\"div\"\n                                            messages={{\n                                                required: 'Required',\n                                                validEmail: 'Need a real email'\n                                            }}\n                                        />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 4, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                                /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        className=\"form-control\"   \n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\n\nconst RenderPartner = ({ partner }) => {\n    if (partner) {\n        return (\n            <React.Fragment>\n                <Media object src={baseUrl + partner.image} alt={partner.name} width=\"150\" />\n                    <Media body className=\"ml-5 mb-4\">\n                        <Media heading>{partner.name}</Media>\n                        {partner.description}\n                    </Media>\n            </React.Fragment>\n        );\n    }\n    return <div/> \n}\n\nfunction PartnerList(props) {\n    const partners = props.partners.partners.map(partner => {\n        return (\n            <Media key={partner.id} tag=\"li\">\n                <RenderPartner partner={partner} />\n            </Media>\n        );\n    });\n    if (props.partners.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    if (props.partners.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    } \n\n    return (\n        <div className=\"col mt-4\">\n            <Media list>\n                {partners}\n            </Media>\n        </div>\n    );\n}\n\nfunction About(props) {\n    \n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>About Covid Command</BreadcrumbItem>\n                    </Breadcrumb>\n                    <h2>About Covid Command</h2>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-sm-6\">\n                    <h3>COVID COMMAND</h3>\n                    <p>Featuring a focused demonstration of COVID-19 data built with React. </p>\n                    <p>The COVID-19 pandemic is a serious global health threat, and CDC is committed to stopping its spread. CDC has a long history of strengthening public health capacity throughout the world to contain outbreaks at their source and minimize their impact. </p>\n                </div>\n                <div className=\"col-sm-6\">\n                    <Card>\n                        <CardHeader className=\"bg-secondary text-white\"><h3>CoronaVirus Stats</h3></CardHeader>\n                        <CardBody>\n                            <dl className=\"row\">\n                                <dt className=\"col-6\">Pandemic Declaration </dt>\n                                <dd className=\"col-6\">March 11, 2020</dd>\n                                <dt className=\"col-6\">First Discovered</dt>\n                                <dd className=\"col-6\">December 31, 2019</dd>\n                                <dt className=\"col-6\">Date Updated</dt>\n                                <dd className=\"col-6\">September 2, 2020</dd>\n                                <dt className=\"col-6\">Confirmed Cases</dt>\n                                <dd className=\"col-6\">25,602,665</dd>\n                                <dt className=\"col-6\">Global Deaths</dt>\n                                <dd className=\"col-6\">852,758</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col\">\n                    <Card className=\"bg-light mt-3\">\n                        <CardBody>\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">The way forward is to not look back, but remember the path from which has already been traveled.</p>\n                                <footer className=\"blockquote-footer\">Drue McCombs,{' '}\n                                    <cite title=\"Source Title\">\"Forward Sight\" -\n                                    Rabling at my Desk - Sept 2020</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h3>COVID RESOURCES</h3>\n                </div>\n                <PartnerList partners={props.partners} />\n            </div>\n        </div>\n    );\n}\n\nexport default About;","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\n\nexport const fetchCampsites = () => dispatch => {\n    dispatch(campsitesLoading());\n\n    return fetch(baseUrl + 'campsites')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(campsites => dispatch(addCampsites(campsites)))\n        .catch(error => dispatch(campsitesFailed(error.message)));\n};\n\n\nexport const campsitesLoading = () => ({\n    type: ActionTypes.CAMPSITES_LOADING\n});\n\nexport const campsitesFailed = errMess => ({\n    type: ActionTypes.CAMPSITES_FAILED,\n    payload: errMess\n});\n\nexport const addCampsites = campsites => ({\n    type: ActionTypes.ADD_CAMPSITES,\n    payload: campsites\n});\n\nexport const fetchComments = () => dispatch => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = errMess => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errMess\n});\n\nexport const addComments = comments => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const addComment = comment => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (campsiteId, rating, author, text) => dispatch => {\n    const newComment = {\n        campsiteId: campsiteId,\n        rating: rating,\n        author: author,\n        text: text\n    };\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n            method: \"POST\",\n            body: JSON.stringify(newComment),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n            .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => { throw error; }\n        )\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => {\n            console.log('post comment', error.message);\n            alert('Your comment could not be posted\\nError: ' + error.message);\n        });\n};\n\nexport const fetchPromotions = () => dispatch => {\n    dispatch(promotionsLoading());\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(promotions => dispatch(addPromotions(promotions)))\n        .catch(error => dispatch(promotionsFailed(error.message)));\n};\n\nexport const promotionsLoading = () => ({\n    type: ActionTypes.PROMOTIONS_LOADING\n});\n\nexport const promotionsFailed = errMess => ({\n    type: ActionTypes.PROMOTIONS_FAILED,\n    payload: errMess\n});\n\nexport const addPromotions = promotions => ({\n    type: ActionTypes.ADD_PROMOTIONS,\n    payload: promotions\n});\n\nexport const fetchPartners = () => dispatch => {\n    dispatch(partnersLoading());\n\n    return fetch(baseUrl + 'partners')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(partners => dispatch(addPartners(partners)))\n        .catch(error => dispatch(partnersFailed(error.message)));\n};\n\n\nexport const partnersLoading = () => ({\n    type: ActionTypes.PARTNERS_LOADING\n});\n\nexport const partnersFailed = errMess => ({\n    type: ActionTypes.PARTNERS_FAILED,\n    payload: errMess\n});\n\nexport const addPartners = partners => ({\n    type: ActionTypes.ADD_PARTNERS,\n    payload: partners\n});\n\nexport const postFeedback = (feedback) => () => {\n\n    return fetch(baseUrl + 'feedback', {\n            method: \"POST\",\n            body: JSON.stringify(feedback),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n            .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => { throw error; }\n        )\n        .then(response => response.json())\n        .then(response => alert(\"Thanks for your feedback!\\n\" + JSON.stringify(response)))\n        .catch(error => {\n            console.log('post comment', error.message);\n            alert('Your feedback could not be posted\\nError: ' + error.message);\n        });\n};","export const ADD_CAMPSITES = 'ADD_CAMPSITES';\nexport const CAMPSITES_LOADING = 'CAMPSITES_LOADING';\nexport const CAMPSITES_FAILED = 'CAMPSITES_FAILED';\n\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\n\nexport const PROMOTIONS_LOADING = 'PROMOTIONS_LOADING';\nexport const ADD_PROMOTIONS = 'ADD_PROMOTIONS';\nexport const PROMOTIONS_FAILED = 'PROMOTIONS_FAILED';\n\nexport const PARTNERS_LOADING = 'PARTNERS_LOADING';\nexport const ADD_PARTNERS = 'ADD_PARTNERS';\nexport const PARTNERS_FAILED = 'PARTNERS_FAILED';","import React, { Component } from 'react';\nimport Directory from './DirectoryComponent';\nimport CampsiteInfo from './CampsiteInfoComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Home from './HomeComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { postComment, postFeedback, fetchCampsites, fetchComments, fetchPromotions, fetchPartners } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'; \n\nconst mapStateToProps = state => {\n    return {\n        campsites: state.campsites,\n        comments: state.comments,\n        partners: state.partners,\n        promotions: state.promotions\n    };\n};\n\nconst mapDispatchToProps = {\n    postComment: (campsiteId, rating, author, text) => (postComment(campsiteId, rating, author, text)),\n    postFeedback: feedback => (postFeedback(feedback)),\n    fetchCampsites: () => (fetchCampsites()),\n    resetFeedbackForm: () => (actions.reset('feedbackForm')),\n    fetchComments: () => (fetchComments()),\n    fetchPromotions: () => (fetchPromotions()),\n    fetchPartners: () => (fetchPartners())\n};\n\nclass Main extends Component {\n    \n    componentDidMount() {\n        this.props.fetchCampsites();\n        this.props.fetchComments();\n        this.props.fetchPromotions();\n        this.props.fetchPartners();\n    }\n    \n    render() {\n        const HomePage = () => {\n            return (\n                <Home\n                    campsite={this.props.campsites.campsites.filter(campsite => campsite.featured)[0]}\n                    campsitesLoading={this.props.campsites.isLoading}\n                    campsitesErrMess={this.props.campsites.errMess}\n                    promotion={this.props.promotions.promotions.filter(promotion => promotion.featured)[0]}\n                    promotionLoading={this.props.promotions.isLoading}\n                    promotionErrMess={this.props.promotions.errMess}\n                    partner={this.props.partners.partners.filter(partner => partner.featured)[0]}\n                    partnerLoading={this.props.partners.isLoading}\n                    partnerErrMess={this.props.partners.errMess}\n                    \n                />\n            )\n        }\n\n        const CampsiteWithId = ({match}) => {\n            return (\n                <CampsiteInfo campsite={this.props.campsites.campsites.filter(campsite => campsite.id === +match.params.campsiteId)[0]}\n                isLoading={this.props.campsites.isLoading}\n                errMess={this.props.campsites.errMess}\n                comments={this.props.comments.comments.filter(comment => comment.campsiteId === +match.params.campsiteId)}\n                commentsErrMess={this.props.comments.errMess}\n                postComment={this.props.postComment}\n                />            \n            );\n        }\n\n        return (\n            <div>\n                <Header />\n                <TransitionGroup>\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300} >\n                        <Switch>\n                            <Route path='/home' component={HomePage} />\n                            <Route exact path='/directory' render={() => <Directory campsites={this.props.campsites} />} />\n                            <Route path='/directory/:campsiteId' component={CampsiteWithId} />\n                            <Route exact path='/contactus' render={() => <Contact postFeedback={this.props.postFeedback} resetFeedbackForm={this.props.resetFeedbackForm} /> } />\n                            <Route exact path='/aboutus' render={() => <About partners={this.props.partners} />} />\n                            <Redirect to='/home' />\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\n\nexport const Campsites = (state = {\n        isLoading: true,\n        errMess: null,\n        campsites: []\n    }, action) => {    \n    switch (action.type) {\n        case ActionTypes.ADD_CAMPSITES:\n            return {...state, isLoading: false, errMess: null, campsites: action.payload};\n        case ActionTypes.CAMPSITES_LOADING:\n            return {...state, isLoading: true, errMess: null, campsites: []};\n        case ActionTypes.CAMPSITES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};   \n        default:\n            return state;\n    }\n};","import * as ActionsTypes from './ActionTypes';\n\nexport const Comments = (state = { errMess: null, comments: []}, action) => {\n    switch (action.type) {\n        case ActionsTypes.ADD_COMMENTS:\n            return {...state, errMess: null, comments: action.payload};\n        case ActionsTypes.COMMENTS_FAILED:   \n            return{...state, errMess: action.payload};\n        case ActionsTypes.ADD_COMMENT:\n            const comment = action.payload;\n            return {...state, comments: state.comments.concat(comment)};\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Partners = (state = {\n    isLoading: true,\n    errMess: null,\n    partners: []\n    }, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PARTNERS:\n            return {...state, isLoading: false, errMess: null, partners: action.payload};\n        case ActionTypes.PARTNERS_LOADING:\n            return {...state, isLoading: true, errMess: null, partners: []};\n        case ActionTypes.PARTNERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};        \n        default:\n            return state;\n    }\n};","import * as ActionsTypes from './ActionTypes';\n\nexport const Promotions = (state = {isLoading: true, \n                                    errMess: null,\n                                    promotions: [] }, action) => {\n    switch (action.type) {\n        case ActionsTypes.ADD_PROMOTIONS:\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\n        \n        case ActionsTypes.PROMOTIONS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []}; \n        \n        case ActionsTypes.PROMOTIONS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};","export const InitialFeedback = {\n    firstName: '',\n    lastName: '',\n    phoneNum: '',\n    email: '',\n    agree: false,\n    contactType: 'Phone',\n    feedback: ''\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nimport './App.css';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  };\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { Campsites } from './campsites';\nimport { Comments } from './comments';\nimport { Partners } from './partners';\nimport { Promotions } from './promotions';\nimport { InitialFeedback } from './forms';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            campsites: Campsites,\n            comments: Comments,\n            partners: Partners,\n            promotions: Promotions,\n            ...createForms({\n                feedbackForm: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n    \n    return store;\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}